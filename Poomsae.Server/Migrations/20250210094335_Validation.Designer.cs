// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poomsae.Server.Infrastructure.Persistence;

#nullable disable

namespace Poomsae.Server.Migrations
{
    [DbContext(typeof(ApplicationSqlContext))]
    [Migration("20250210094335_Validation")]
    partial class Validation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Completion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("MasterId");

                    b.ToTable("clubs", (string)null);
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Kata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Completion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SportId");

                    b.ToTable("katas", (string)null);
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Movement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyPart")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("StepId")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("movements", (string)null);
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("Completion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Ecole")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("CreatorId");

                    b.ToTable("sports", (string)null);
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Completion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("KataId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("KataId");

                    b.ToTable("steps", (string)null);
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("MasterId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Club", b =>
                {
                    b.HasOne("Poomsae.Server.Domain.Entitites.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poomsae.Server.Domain.Entitites.User", "Master")
                        .WithMany()
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Master");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Kata", b =>
                {
                    b.HasOne("Poomsae.Server.Domain.Entitites.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poomsae.Server.Domain.Entitites.Sport", null)
                        .WithMany("SubChildEntityList")
                        .HasForeignKey("SportId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Movement", b =>
                {
                    b.HasOne("Poomsae.Server.Domain.Entitites.Step", null)
                        .WithMany("SubChildEntityList")
                        .HasForeignKey("StepId");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Sport", b =>
                {
                    b.HasOne("Poomsae.Server.Domain.Entitites.Club", null)
                        .WithMany("SubChildEntityList")
                        .HasForeignKey("ClubId");

                    b.HasOne("Poomsae.Server.Domain.Entitites.User", "Creator")
                        .WithMany("Sports")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Step", b =>
                {
                    b.HasOne("Poomsae.Server.Domain.Entitites.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poomsae.Server.Domain.Entitites.Kata", null)
                        .WithMany("SubChildEntityList")
                        .HasForeignKey("KataId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.User", b =>
                {
                    b.HasOne("Poomsae.Server.Domain.Entitites.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poomsae.Server.Domain.Entitites.User", "Master")
                        .WithMany("Students")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Master");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Club", b =>
                {
                    b.Navigation("SubChildEntityList");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Kata", b =>
                {
                    b.Navigation("SubChildEntityList");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Sport", b =>
                {
                    b.Navigation("SubChildEntityList");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.Step", b =>
                {
                    b.Navigation("SubChildEntityList");
                });

            modelBuilder.Entity("Poomsae.Server.Domain.Entitites.User", b =>
                {
                    b.Navigation("Sports");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
